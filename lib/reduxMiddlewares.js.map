{"version":3,"sources":["../src/reduxMiddlewares.js"],"names":["defaultActionLoggerOptions","actionFilter","f","stateFilter","level","defaultCrashReporterOptions","actionLogger","logger","options","action","Object","assign","filteredAction","currState","store","getState","next","nextState","state","before","after","report","crashReporter","e"],"mappings":";;;;;AAAA,IAAMA,6BAA6B;AAC/BC,kBAAc;AAAA,eAAKC,CAAL;AAAA,KADiB;AAE/BC,iBAAa;AAAA,eAAM,IAAN;AAAA,KAFkB;AAG/BC,WAAO;AAHwB,CAAnC;;AAMA,IAAMC,8BAA8B;AAChCF,iBAAa;AAAA,eAAM,IAAN;AAAA,KADmB;AAEhCC,WAAO;AAFyB,CAApC;;AAKA,IAAME,eAAe,SAAfA,YAAe,CACjBC,MADiB;AAAA,QAEjBC,OAFiB,uEAEP,EAFO;AAAA,WAGhB;AAAA,eAAS;AAAA,mBAAQ,UAACC,MAAD,EAAY;AAAA,qCACeC,OAAOC,MAAP,CAAcX,0BAAd,EAA0CQ,OAA1C,CADf;AAAA,oBACtBP,YADsB,kBACtBA,YADsB;AAAA,oBACRE,WADQ,kBACRA,WADQ;AAAA,oBACKC,KADL,kBACKA,KADL;;AAG9B,oBAAMQ,iBAAiBX,aAAaQ,MAAb,CAAvB;AACA,oBAAMI,YAAYV,YAAYW,MAAMC,QAAN,EAAZ,CAAlB;;AAEAC,qBAAKP,MAAL;;AAEA,oBAAMQ,YAAYd,YAAYW,MAAMC,QAAN,EAAZ,EAA8BN,MAA9B,CAAlB;AACA,oBAAMS,QAASL,aAAaI,SAAd,GAA2B;AACrCE,4BAAQN,SAD6B;AAErCO,2BAAOH;AAF8B,iBAA3B,GAGV,EAHJ;;AAKAV,uBAAOc,MAAP,CAAcjB,KAAd,EAAqBQ,cAArB,EAAqCM,KAArC;AACH,aAfa;AAAA,SAAT;AAAA,KAHgB;AAAA,CAArB;;AAoBA,IAAMI,gBAAgB,SAAhBA,aAAgB,CAClBf,MADkB;AAAA,QAElBC,OAFkB,uEAER,EAFQ;AAAA,WAGjB;AAAA,eAAS;AAAA,mBAAQ,UAACC,MAAD,EAAY;AAAA,sCACCC,OAAOC,MAAP,CAAcN,2BAAd,EAA2CG,OAA3C,CADD;AAAA,oBACtBL,WADsB,mBACtBA,WADsB;AAAA,oBACTC,KADS,mBACTA,KADS;;AAG9B,oBAAI;AACA,2BAAOY,KAAKP,MAAL,CAAP;AACH,iBAFD,CAEE,OAAOc,CAAP,EAAU;AACRhB,2BAAOc,MAAP,CAAcjB,KAAd,EAAqBmB,CAArB,EAAwBpB,YAAYW,MAAMC,QAAN,EAAZ,CAAxB;AACA,0BAAMQ,CAAN;AACH;AACJ,aATa;AAAA,SAAT;AAAA,KAHiB;AAAA,CAAtB;;QAcSjB,Y,GAAAA,Y;QAAcgB,a,GAAAA,a","file":"reduxMiddlewares.js","sourcesContent":["const defaultActionLoggerOptions = {\n    actionFilter: f => f,\n    stateFilter: () => null,\n    level: 'info',\n};\n\nconst defaultCrashReporterOptions = {\n    stateFilter: () => null,\n    level: 'error'\n}\n\nconst actionLogger = (\n    logger,\n    options = {},\n) => store => next => (action) => {\n    const { actionFilter, stateFilter, level } = Object.assign(defaultActionLoggerOptions, options);\n\n    const filteredAction = actionFilter(action);\n    const currState = stateFilter(store.getState());\n\n    next(action);\n\n    const nextState = stateFilter(store.getState(), action);\n    const state = (currState || nextState) ? {\n        before: currState,\n        after: nextState,\n    } : {};\n\n    logger.report(level, filteredAction, state);\n};\n\nconst crashReporter = (\n    logger,\n    options = {}\n) => store => next => (action) => {\n    const { stateFilter, level } = Object.assign(defaultCrashReporterOptions, options);\n\n    try {\n        return next(action);\n    } catch (e) {\n        logger.report(level, e, stateFilter(store.getState()));\n        throw e;\n    }\n};\n\nexport { actionLogger, crashReporter };\n"]}